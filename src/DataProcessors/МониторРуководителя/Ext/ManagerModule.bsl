#Область ПрограммныйИнтерфейс

#Область Новости
Функция ЗагрузитьНовости(Знач текстЗапроса, Знач датаЗагрузки = Неопределено, Знач язык = "ru", Знач максКоличество = 100) Экспорт
    сервер = "newsapi.org";
    адресЗапроса = "/v2/everything";
    параметрыЗапроса = СтрШаблон("apiKey=%1&sortBy=popularity&q=%2&language=%3&pageSize=%4&page=1",
            Константы.API_KEY_newsapi.Получить(),
            текстЗапроса, язык, максКоличество);
    Если датаЗагрузки <> Неопределено Тогда
        параметрыЗапроса = параметрыЗапроса + СтрШаблон("&to=%1", Формат(датаЗагрузки, "ДФ=yyyy-NN-dd"));
    КонецЕсли;

    адресЗапроса = СтрШаблон("%1?%2", адресЗапроса, параметрыЗапроса);
    
    результатЗапроса = получитьДанныеИзСервиса(сервер, адресЗапроса);

    Если результатЗапроса.ТекстОшибки <> Неопределено Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = результатЗапроса.ТекстОшибки;
        сообщение.Сообщить();

        Возврат Неопределено;
    КонецЕсли;

    Если результатЗапроса.Ответ.КодСостояния <> 200 Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = СтрШаблон("Код вернул код состояния, отличный от 200: %1", результатЗапроса.Ответ.КодСостояния);
        сообщение.Сообщить();

        Возврат Неопределено;
    КонецЕсли;

    строкаJSON = результатЗапроса.Ответ.ПолучитьТелоКакСтроку();
    списокНовостей = ПрочитатьЗначениеJSON(строкаJSON);

    Если списокНовостей = Неопределено Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = "";
    сч = 1;
    Для Каждого Статья Из списокНовостей.articles Цикл
        результат = СтрШаблон("%1%2. Источник: %3%6%4%6%5%6%6", результат,
                Строка(сч), Статья.url, Статья.title, Статья.description, Символы.ПС);
        сч = сч + 1;
    КонецЦикла;

    Возврат результат;
КонецФункции
#КонецОбласти // Новости

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция получитьДанныеИзСервиса(Знач сервер, Знач адресЗапроса)
    заголовокЗапроса = Новый Соответствие();

    заголовокЗапроса.Вставить("Content-Type", "application/json; charset=UTF-8");
    заголовокЗапроса.Вставить("Accept", "application/json");

    запросНаСервер = Новый HTTPЗапрос(адресЗапроса, заголовокЗапроса);
    ответСервера = Неопределено;
    текстОшибки = Неопределено;

    Попытка
        соединение = Новый HTTPСоединение(сервер, , , , , 60);
        ответСервера = соединение.Получить(запросНаСервер);
    Исключение
        текстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    КонецПопытки;

    результат = Новый Структура;
    результат.Вставить("Ответ", ответСервера);
    результат.Вставить("ТекстОшибки", текстОшибки);

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
