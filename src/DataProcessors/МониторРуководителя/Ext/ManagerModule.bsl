#Область ПрограммныйИнтерфейс

#Область ДанныеМонитораРуководителя
Функция ПолучитьДанныеЧисловыхПоказателей(Знач датаНачала, Знач датаОкончания) Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("ДатаНачала", датаНачала);
    запрос.УстановитьПараметр("ДатаОкончания", датаОкончания);

    запрос.Текст =
        "ВЫБРАТЬ
        |	ЗаказыКлиентов.Регистратор КАК ЗаписьКлиента
        |ПОМЕСТИТЬ ВТ_ЗаказыКлиентов
        |ИЗ
        |	РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
        |ГДЕ
        |	ЗаказыКлиентов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
        |	И ЗаказыКлиентов.Регистратор ССЫЛКА Документ.ЗаписьКлиента
        |
        |СГРУППИРОВАТЬ ПО
        |	ЗаказыКлиентов.Регистратор
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	ЗаписьКлиента
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ПродажиОбороты.Регистратор КАК Регистратор,
        |	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
        |ПОМЕСТИТЬ ВТ_Продажи
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
        |
        |СГРУППИРОВАТЬ ПО
        |	ПродажиОбороты.Регистратор
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	Регистратор
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ ПЕРВЫЕ 1
        |	КОЛИЧЕСТВО(ВТ_ЗаказыКлиентов.ЗаписьКлиента) КАК ВсегоЗаписей,
        |	КОЛИЧЕСТВО(ВТ_Продажи.Регистратор) КАК Завершенных,
        |	СУММА(ВТ_Продажи.СуммаОборот) КАК Выручка
        |ИЗ
        |	ВТ_Продажи КАК ВТ_Продажи
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
        |		ПО (РеализацияТоваровИУслуг.Ссылка = ВТ_Продажи.Регистратор)
        |		ПРАВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыКлиентов КАК ВТ_ЗаказыКлиентов
        |		ПО (ВТ_ЗаказыКлиентов.ЗаписьКлиента = РеализацияТоваровИУслуг.ДокументОснование)
        |";

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    выборка = результатЗапроса.Выбрать();
    выборка.Следующий();
    результат = Новый Структура("Выручка, ВсегоЗаписей, Завершенных");
    ЗаполнитьЗначенияСвойств(результат, выборка);

    Возврат Новый ФиксированнаяСтруктура(результат);
КонецФункции

Функция ПолучитьДанныеПродажПоДням(Знач датаНачала, Знач датаОкончания) Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("ДатаНачала", датаНачала);
    запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(датаОкончания));

    запрос.Текст =
        "ВЫБРАТЬ
        |	НачалоПериода(Продажи.Период, День) КАК Период,
        |	Продажи.СуммаОборот КАК Сумма
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, День, ) КАК Продажи
        |
        |УПОРЯДОЧИТЬ ПО
        |	Период
        |";

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Массив;
    выборка = результатЗапроса.Выбрать();
    Пока выборка.Следующий() Цикл
        результат.Добавить(Новый ФиксированнаяСтруктура("Период, Сумма", выборка.Период, выборка.Сумма));
    КонецЦикла;

    Возврат результат;
КонецФункции

Функция ПолучитьДолиПродажУслуг(Знач датаНачала, Знач датаОкончания, Знач доляПродаж) Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("ДатаНачала", датаНачала);
    запрос.УстановитьПараметр("ДатаОкончания", датаОкончания);
    запрос.УстановитьПараметр("ДоляПродаж", доляПродаж);

    запрос.Текст =
        "ВЫБРАТЬ
        |	ПродажиОбороты.Номенклатура КАК Номенклатура,
        |	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
        |ПОМЕСТИТЬ ВТ_ПродажиУслуг
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор,
        |		Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
        |ГДЕ
        |	ПродажиОбороты.СуммаОборот <> 0
        |
        |СГРУППИРОВАТЬ ПО
        |	ПродажиОбороты.Номенклатура
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ ПЕРВЫЕ 1
        |	СУММА(ВТ_ПродажиУслуг.СуммаОборот) КАК СуммаОборот
        |ПОМЕСТИТЬ ВТ_ОбщаяСуммаПродажУслуг
        |ИЗ
        |	ВТ_ПродажиУслуг КАК ВТ_ПродажиУслуг
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВЫБОР
        |		КОГДА ВТ_ПродажиУслуг.СуммаОборот / ВТ_ОбщаяСуммаПродажУслуг.СуммаОборот > &ДоляПродаж
        |			ТОГДА ВТ_ПродажиУслуг.Номенклатура.Представление
        |		ИНАЧЕ ""Прочее""
        |	КОНЕЦ КАК Номенклатура,
        |	ВТ_ПродажиУслуг.СуммаОборот КАК СуммаПродаж
        |ПОМЕСТИТЬ ВТ_ПродажиУслугПоКатегориям
        |ИЗ
        |	ВТ_ПродажиУслуг КАК ВТ_ПродажиУслуг
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбщаяСуммаПродажУслуг КАК ВТ_ОбщаяСуммаПродажУслуг
        |		ПО (ИСТИНА)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_ПродажиУслугПоКатегориям.Номенклатура КАК Номенклатура,
        |	СУММА(ВТ_ПродажиУслугПоКатегориям.СуммаПродаж) КАК СуммаПродаж
        |ИЗ
        |	ВТ_ПродажиУслугПоКатегориям КАК ВТ_ПродажиУслугПоКатегориям
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ПродажиУслугПоКатегориям.Номенклатура
        |";

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Соответствие;
    выборка = результатЗапроса.Выбрать();
    Пока выборка.Следующий() Цикл
        результат.Вставить(выборка.Номенклатура, выборка.СуммаПродаж);
    КонецЦикла;

    Возврат Новый ФиксированноеСоответствие(результат);
КонецФункции

Функция ПолучитьИсточникиИнформацииПокупок(Знач датаНачала, Знач датаОкончания, Знач представлениеNull = "Не указан") Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("ДатаНачала", датаНачала);
    запрос.УстановитьПараметр("ДатаОкончания", датаОкончания);
    запрос.УстановитьПараметр("ПредставлениеNull", представлениеNull);

    запрос.Текст =
        "ВЫБРАТЬ
        |	ЕСТЬNULL(Продажи.Клиент.Источник.Представление, &ПредставлениеNull) КАК ИсточникИнформации,
        |	КОЛИЧЕСТВО(Продажи.Клиент.Источник) КАК Количество
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
        |ГДЕ
        |	Продажи.СуммаОборот <> 0
        |
        |СГРУППИРОВАТЬ ПО
        |	ЕСТЬNULL(Продажи.Клиент.Источник.Представление, &ПредставлениеNull)
        |";

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Соответствие;
    выборка = результатЗапроса.Выбрать();
    Пока выборка.Следующий() Цикл
        результат.Вставить(выборка.ИсточникИнформации, выборка.Количество);
    КонецЦикла;

    Возврат Новый ФиксированноеСоответствие(результат);
КонецФункции

Функция ПолучитьПродажиПоСотрудникам(Знач датаНачала, Знач датаОкончания) Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("ДатаНачала", датаНачала);
    запрос.УстановитьПараметр("ДатаОкончания", датаОкончания);

    запрос.Текст =
        "ВЫБРАТЬ
        |	СУММА(Продажи.СуммаОборот) КАК Сумма,
        |	Продажи.Сотрудник.Представление КАК Сотрудник
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
        |ГДЕ
        |	Продажи.СуммаОборот <> 0
        |
        |СГРУППИРОВАТЬ ПО
        |	Продажи.Сотрудник.Представление
        |";

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Соответствие;
    выборка = результатЗапроса.Выбрать();
    Пока выборка.Следующий() Цикл
        результат.Вставить(выборка.Сотрудник, выборка.Сумма);
    КонецЦикла;

    Возврат Новый ФиксированноеСоответствие(результат);
КонецФункции
#КонецОбласти // ДанныеМонитораРуководителя

#Область Новости
Функция ЗагрузитьНовости(Знач текстЗапроса, Знач датаЗагрузки = Неопределено, Знач язык = "ru", Знач максКоличество = 100) Экспорт
    сервер = "newsapi.org";
    адресЗапроса = "/v2/everything";
    параметрыЗапроса = СтрШаблон("apiKey=%1&sortBy=popularity&q=%2&language=%3&pageSize=%4&page=1",
            Константы.API_KEY_newsapi.Получить(),
            текстЗапроса, язык, максКоличество);
    Если датаЗагрузки <> Неопределено Тогда
        параметрыЗапроса = параметрыЗапроса + СтрШаблон("&from=%1", Формат(датаЗагрузки - 24 * 60 * 60, "ДФ=yyyy-MM-dd"));
    КонецЕсли;

    адресЗапроса = СтрШаблон("%1?%2", адресЗапроса, параметрыЗапроса);
    
    результатЗапроса = получитьДанныеИзСервиса(сервер, адресЗапроса);

    Если результатЗапроса.ТекстОшибки <> Неопределено Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = результатЗапроса.ТекстОшибки;
        сообщение.Сообщить();

        Возврат Неопределено;
    КонецЕсли;

    Если результатЗапроса.Ответ.КодСостояния <> 200 Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = СтрШаблон("Код вернул код состояния, отличный от 200: %1", результатЗапроса.Ответ.КодСостояния);
        сообщение.Сообщить();

        Возврат Неопределено;
    КонецЕсли;

    строкаJSON = результатЗапроса.Ответ.ПолучитьТелоКакСтроку();
    списокНовостей = ПрочитатьЗначениеJSON(строкаJSON);

    Если списокНовостей = Неопределено Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = "";
    сч = 1;
    Для Каждого статьяНовостей Из списокНовостей.articles Цикл
        результат = СтрШаблон("%1%2. Источник: %3%6%4%6%5%6%6", результат,
                Строка(сч), статьяНовостей.url, статьяНовостей.title, статьяНовостей.description, Символы.ПС);
        сч = сч + 1;
    КонецЦикла;

    Возврат результат;
КонецФункции
#КонецОбласти // Новости

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция получитьДанныеИзСервиса(Знач сервер, Знач адресЗапроса)
    заголовокЗапроса = Новый Соответствие();

    заголовокЗапроса.Вставить("Content-Type", "application/json; charset=UTF-8");
    заголовокЗапроса.Вставить("Accept", "application/json");

    запросНаСервер = Новый HTTPЗапрос(адресЗапроса, заголовокЗапроса);
    ответСервера = Неопределено;
    текстОшибки = Неопределено;

    Попытка
        соединение = Новый HTTPСоединение(сервер, , , , , 60);
        ответСервера = соединение.Получить(запросНаСервер);
    Исключение
        текстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    КонецПопытки;

    результат = Новый Структура;
    результат.Вставить("Ответ", ответСервера);
    результат.Вставить("ТекстОшибки", текстОшибки);

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
