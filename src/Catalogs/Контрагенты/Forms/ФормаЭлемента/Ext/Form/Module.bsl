#Область ОписаниеПеременных

// Содержит ссылки на объекты предопределенных групп контрагентов (Только для чтения)
&НаКлиенте
Перем _ПредопределенныеГруппыКонтрагенты;

// Содержит значения из Перечисление.ТипыКонтрагентов (Только для чтения)
&НаКлиенте
Перем _ТипыКонтрагентов;

// Хранит значение заголовка для поля формы Наименование введенное в
// конструкторе заголовокПоляНаименованиеПоУмолчанию (Только для чтения). \
// Для доступа к полю использовать функцию: получитьЗаголовокПоляНаименованиеПоУмолчанию()
&НаКлиенте
Перем _ЗаголовокПоляНаименованиеПоУмолчанию;

// Коллекция ссылок полей формы доступных только для Клиента (Только для чтения)
&НаКлиенте
Перем _ПоляТолькоДляКлиента;

// Коллекция ссылок полей формы доступных только для Поставщика (Только для чтения)
&НаКлиенте
Перем _ПоляТолькоДляПоставщика;

#КонецОбласти // ОписаниеПеременных

#Область ОбработчикиСобытийФормы

// Обработчик события формы ПриОткрытии
// Параметры:
// _ - ЭлементФормы - не используется в текущей реализации
&НаКлиенте
Процедура ПриОткрытии(_)
    инициализация();

    Объект.ТипКонтрагента = ?(Объект.ТипКонтрагента.Пустая(),
            _ТипыКонтрагентов.Клиент, Объект.ТипКонтрагента);

    настройкаВидаФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(отказ, __)
    Если этоКлиент() Тогда
        очиститьПоляПоставщика();
        Объект.Родитель = _ПредопределенныеГруппыКонтрагенты.Клиенты;
    ИначеЕсли этоПоставщик() Тогда
        очиститьПоляКлиента();
        Если Объект.ОсновнойДоговор.Пустая() Тогда
            ПоказатьПредупреждение( , "Основной договор не выбран для поставщика.");
        КонецЕсли;
        Объект.Родитель = _ПредопределенныеГруппыКонтрагенты.Поставщики;
    Иначе
        отказ = Истина;
        ПоказатьПредупреждение( , "Операция не может быть выполнена. Тип клиента не определен.");
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события поля формы ПриИзменении / для поля ТипКонтрагента
// Параметры:
// _ - ЭлементФормы - не используется в текущей реализации
&НаКлиенте
Процедура ТипКонтрагентаПриИзменении(_)
    настройкаВидаФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

#Область Инициализация
&НаКлиенте
Процедура инициализация()
    _ЗаголовокПоляНаименованиеПоУмолчанию = Элементы.Наименование.Заголовок;

    инициализацияПредопределенныхЗначений();
    инициализацияПолейФормыПоТипуКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура инициализацияПредопределенныхЗначений()
    // Инициализация _ПредопределенныеГруппыКонтрагенты
    имяГруппаКлиенты = "Клиенты";
    имяГруппаПоставщики = "Поставщики";

    _ПредопределенныеГруппыКонтрагенты = Новый Структура;

    _ПредопределенныеГруппыКонтрагенты.Вставить(имяГруппаКлиенты,
        получитьПредопределенныйЭлементКонтрагента(имяГруппаКлиенты));

    _ПредопределенныеГруппыКонтрагенты.Вставить(имяГруппаПоставщики,
        получитьПредопределенныйЭлементКонтрагента(имяГруппаПоставщики));

    // Инициализация _ТипыКонтрагентов
    имяТипаКонтрагентаКлиент = "Клиент";
    имяТипаКонтрагентаПоставщик = "Поставщик";

    _ТипыКонтрагентов = Новый Структура;

    _ТипыКонтрагентов.Вставить(имяТипаКонтрагентаКлиент,
        получитьЗначениеТипаКонтрагента(имяТипаКонтрагентаКлиент));

    _ТипыКонтрагентов.Вставить(имяТипаКонтрагентаПоставщик,
        получитьЗначениеТипаКонтрагента(имяТипаКонтрагентаПоставщик));
КонецПроцедуры

&НаКлиенте
Процедура инициализацияПолейФормыПоТипуКонтрагентов()
    // Инициализация полей доступных только для Клиента
    _ПоляТолькоДляКлиента = ?(_ПоляТолькоДляКлиента <> Неопределено,
            _ПоляТолькоДляКлиента, Новый Массив);

    Если _ПоляТолькоДляКлиента.Количество() = 0 Тогда
        _ПоляТолькоДляКлиента.Добавить(Элементы.Пол);
        _ПоляТолькоДляКлиента.Добавить(Элементы.ДатаРождения);
        _ПоляТолькоДляКлиента.Добавить(Элементы.Источник);
        _ПоляТолькоДляКлиента.Добавить(Элементы.Питомцы);
    КонецЕсли;

    // Инициализация полей доступных только для Поставщика
    _ПоляТолькоДляПоставщика = ?(_ПоляТолькоДляПоставщика <> Неопределено,
            _ПоляТолькоДляПоставщика, Новый Массив);

    Если _ПоляТолькоДляПоставщика.Количество() = 0 Тогда
        _ПоляТолькоДляПоставщика.Добавить(Элементы.ОсновнойДоговор);
    КонецЕсли;
КонецПроцедуры
#КонецОбласти // Инициализация

#Область НастройкиОтображенияФормы
// Выполняет настройку полей формы в соответствии
// с выбранным значением Типа Контрагента / Клиент или Поставщик
&НаКлиенте
Процедура настройкаВидаФормы()
    этоКлиент_ = этоКлиент();
    настроитьВидФормыДляКлиента(этоКлиент_);

    этоПоставщик_ = ?(этоКлиент_, Ложь, этоПоставщик());
    настроитьВидФормыДляПоставщика(этоПоставщик_);
КонецПроцедуры

// Параметры:
// 	этоКлиент - Булево
&НаКлиенте
Процедура настроитьВидФормыДляКлиента(Знач этоКлиент)
    Для Каждого полеФормы Из _ПоляТолькоДляКлиента Цикл
        полеФормы.Видимость = этоКлиент;
    КонецЦикла;

    Если этоКлиент Тогда
        Элементы.Наименование.Заголовок = "Ф.И.О. клиента";
    КонецЕсли;
КонецПроцедуры

// Параметры:
// 	этоПоставщик - Булево
&НаКлиенте
Процедура настроитьВидФормыДляПоставщика(Знач этоПоставщик)
    Для Каждого полеФормы Из _ПоляТолькоДляПоставщика Цикл
        полеФормы.Видимость = этоПоставщик;
    КонецЦикла;

    Если этоПоставщик Тогда
        Элементы.Наименование.Заголовок = _ЗаголовокПоляНаименованиеПоУмолчанию;
    КонецЕсли;

    Элементы.ОсновнойДоговор.АвтоОтметкаНезаполненного = ?(этоПоставщик, Истина, Ложь);
КонецПроцедуры

// Параметры:
//  коллекцияПолейФормы - КоллекцияПолейФормы - коллекция объектов полей формы
&НаКлиенте
Процедура очиститьПоля(коллекцияПолейФормы)
    Для Каждого поле Из коллекцияПолейФормы Цикл
        Если (ТипЗнч(поле) = Тип("ТаблицаФормы")) И (ТипЗнч(Объект[поле.Имя]) =
                Тип("ДанныеФормыКоллекция")) Тогда
            Объект[поле.Имя].Очистить();
        Иначе
            Объект[поле.Имя] = Неопределено;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

// Выполняет очистку полей формы используемых только для Поставщика
&НаКлиенте
Процедура очиститьПоляПоставщика()
    очиститьПоля(_ПоляТолькоДляПоставщика);
КонецПроцедуры

// Выполняет очистку полей формы используемых только для Клиента
&НаКлиенте
Процедура очиститьПоляКлиента()
    очиститьПоля(_ПоляТолькоДляКлиента);
КонецПроцедуры
#КонецОбласти // НастройкиОтображенияФормы

#Область ПриватныеСвойства
// Возвращаемое значение:
// 	Булево - Истина, если текущий элемент это Клиент
&НаКлиенте
Функция этоКлиент()
    Возврат Объект.ТипКонтрагента = _ТипыКонтрагентов.Клиент;
КонецФункции

// Возвращаемое значение:
// 	Булево - Истина, если текущий элемент это Поставщик
&НаКлиенте
Функция этоПоставщик()
    Возврат Объект.ТипКонтрагента = _ТипыКонтрагентов.Поставщик;
КонецФункции
#КонецОбласти // ПриватныеСвойства

#Область Утилиты
// Получить значение типа контрагента
// Параметры:
//	имяТипаКонтрагента - Строка - строковое значение из Перечисления.ТипыКонтрагентов
// Возвращаемое значение:
// 	Перечисления.ТипыКонтрагентов.ТипКонтрагента
&НаКлиенте
Функция получитьЗначениеТипаКонтрагента(Знач имяТипаКонтрагента)
    Возврат получитьПредопределенныйЭлемент(СтрШаблон("Перечисление.ТипыКонтрагентов.%1", имяТипаКонтрагента));
КонецФункции

// Получить значение реквизита Справочника Контрагенты
// Параметры:
//	имяПредопределенного - Строка - имя реквизита Справочника Контрагенты
// Возвращаемое значение:
// 	Любой
&НаКлиенте
Функция получитьПредопределенныйЭлементКонтрагента(Знач имяПредопределенного)
    Возврат получитьПредопределенныйЭлемент(СтрШаблон("Справочник.Контрагенты.%1", имяПредопределенного));
КонецФункции

// Получить предопределенный элемент метаданных. \
// [прим. разработчика] - нужно вынести в общий модуль
//
// Параметры:
//  полныйПуть - Строка - полный путь к объекту метаданных
//
// Возвращаемое значение:
//  Любой - объект метаданных или Неопределено
&НаКлиенте
Функция получитьПредопределенныйЭлемент(Знач полныйПуть)
    Попытка
        Возврат ПредопределенноеЗначение(полныйПуть);
    Исключение
        Возврат Неопределено;
    КонецПопытки;
КонецФункции
#КонецОбласти // Утилиты

#КонецОбласти // СлужебныеПроцедурыИФункции
