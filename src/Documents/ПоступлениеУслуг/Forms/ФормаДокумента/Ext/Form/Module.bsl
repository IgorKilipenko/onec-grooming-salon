#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(_)
    текущиеДанныеУслуги = Элементы.Услуги.ТекущиеДанные;

	текущиеДанныеУслуги.СтатьяЗатрат = получитьСтатьюЗатрат();
    текущиеДанныеУслуги.Цена = получитьЦенуПродажи(текущиеДанныеУслуги.Номенклатура);

    обновитьСуммуПоСтрокеУслуги();
	обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(_)
	обновитьСуммуПоСтрокеУслуги();
	обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(_)
	обновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыУслуги

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//	СправочникСсылка.СтатьиЗатрат
&НаКлиенте
Функция получитьСтатьюЗатрат()
	номенклатура = Элементы.Услуги.ТекущиеДанные.Номенклатура;
	Возврат РаботаСЦенамиВызовСервера.ПолучитьСтатьюЗатратПоНоменклатуре(номенклатура);
КонецФункции

&НаКлиенте
Процедура обновитьСуммуДокумента()
	Объект.СуммаДокумента = Объект.Услуги.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура обновитьСуммуПоСтрокеУслуги()
	строкаТчУслуги = Элементы.Услуги.ТекущиеДанные;
	строкаТчУслуги.Сумма = строкаТчУслуги.Количество * строкаТчУслуги.Цена;
КонецПроцедуры

&НаКлиенте
Функция получитьЦенуПродажи(Знач номенклатура)
    цена = РаботаСЦенамиВызовСервера.ПолучитьЦенуПродажиНаДату(номенклатура);

    Если цена = Неопределено Тогда
        текстСообщения = СтрШаблон("Не удалось получить текущую цену продажи для номенклатуры: ""%1"".\n
                |Проверьте наличие цены для номенклатуры в регистре цен",
                номенклатура);
        ПоказатьПредупреждение( , текстСообщения);
        цена = 0;
    КонецЕсли;

    Возврат цена;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
