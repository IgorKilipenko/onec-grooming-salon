#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(_, __, ___)
    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(_, __)
    Движения.УчетЗатрат.Записывать = Истина;

    выборкаУслугДокумента_ = получитьВыборкуСуммСтатейЗатратПоУслугамДокумента();
    Если выборкаУслугДокумента_ = Неопределено Тогда
        Возврат;
    КонецЕсли;

    Пока выборкаУслугДокумента_.Следующий() Цикл
        выполнитьДвижениеУчетЗатратОборот(выборкаУслугДокумента_);
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область Движения
Функция создатьДвижениеУчетЗатратОборот()
    движение_ = Движения.УчетЗатрат.Добавить();
    движение_.Период = Дата;
    движение_.Регистратор = Ссылка;

    Возврат движение_;
КонецФункции

Процедура выполнитьДвижениеУчетЗатратОборот(данныеЗатрат)
    движение_ = создатьДвижениеУчетЗатратОборот();
    ЗаполнитьЗначенияСвойств(движение_, данныеЗатрат);
КонецПроцедуры
#КонецОбласти // Движения

#Область ЗапросыДанных
Функция получитьВыборкуСуммСтатейЗатратПоУслугамДокумента()
    запросУслуг_ = Новый Запрос;
    запросУслуг_.УстановитьПараметр("Ссылка", Ссылка);

    запросУслуг_.Текст =
        "ВЫБРАТЬ
        |	ПоступлениеУслугУслуги.СтатьяЗатрат КАК СтатьяЗатрат,
        |	СУММА(ПоступлениеУслугУслуги.Сумма) КАК Сумма
        |ИЗ
        |	Документ.ПоступлениеУслуг.Услуги КАК ПоступлениеУслугУслуги
        |ГДЕ
        |	ПоступлениеУслугУслуги.Ссылка = &Ссылка
        |
        |СГРУППИРОВАТЬ ПО
        |   СтатьяЗатрат
        |";

    результатЗапроса_ = запросУслуг_.Выполнить();

    Если результатЗапроса_.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    выборка_ = результатЗапроса_.Выбрать();
    Возврат выборка_;
КонецФункции
#КонецОбласти // ЗапросыДанных

#КонецОбласти // СлужебныеПроцедурыИФункции
