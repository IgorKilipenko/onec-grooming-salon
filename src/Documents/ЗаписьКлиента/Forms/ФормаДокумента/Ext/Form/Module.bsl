#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
    Если НЕ Объект.Ссылка.Пустая() Тогда
        Объект.УслугаОказана = получитьСтатусОказанияУслугиНаСервере(Объект.Ссылка);

    Иначе
        Если Параметры.Свойство("Начало") Тогда
            Объект.ДатаЗаписи = Параметры.Начало;
        КонецЕсли;

        Если Параметры.Свойство("Окончание") Тогда
            Объект.ДатаОкончанияЗаписи = Параметры.Окончание;
        КонецЕсли;

        Если Параметры.Свойство("Сотрудник") Тогда
            Объект.Сотрудник = Параметры.Сотрудник;
        КонецЕсли;
    КонецЕсли;

    установитьДоступностьЭлементовФормыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(_)
    параметрыОповещенияЗаписиКлиента = Новый Структура("Документ", Объект.Ссылка);
    Оповестить("Записан заказ", параметрыОповещенияЗаписиКлиента, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(имяСобытия, параметрыСобытия, ___)
    Если имяСобытия = "Записан документРТУ" Тогда
        документОснованиеИсточника = ?(параметрыСобытия.Свойство("ДокументОснование"),
                параметрыСобытия.ДокументОснование, Неопределено);
        Если документОснованиеИсточника = Объект.Ссылка Тогда
            Объект.УслугаОказана = получитьСтатусОказанияУслугиНаСервере(Объект.Ссылка);
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиУслугаПриИзменении(_)
    текущаяСтрокаУслуги = Элементы.Услуги.ТекущиеДанные;
    текущаяСтрокаУслуги.Стоимость = получитьЦенуПродажи(текущаяСтрокаУслуги.Услуга);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыУслуги

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция получитьЦенуПродажи(Знач номенклатура)
    цена = РаботаСЦенамиВызовСервера.ПолучитьЦенуПродажиНаДату(номенклатура);

    Если цена = Неопределено Тогда
        сообщение = Новый СообщениеПользователю();
        сообщение.Поле = СтрШаблон("Услуги[%1].Услуга", Объект.Услуги.Индекс(Элементы.Услуги.ТекущиеДанные));
        сообщение.КлючДанных = Объект.Ссылка;
        сообщение.ПутьКДанным = "Объект";

        Если ЗначениеЗаполнено(номенклатура) Тогда
            сообщение.Текст = СтрШаблон(
                    "Не удалось получить текущую цену продажи для номенклатуры: ""%1"".
                    |Проверьте наличие цены для номенклатуры в регистре цен.",
                    номенклатура);
        Иначе
            сообщение.Текст = "Услуга не может иметь постое значение.";
        КонецЕсли;

        сообщение.Сообщить();
        цена = 0;
    КонецЕсли;

    Возврат цена;
КонецФункции

&НаСервере
Процедура установитьДоступностьЭлементовФормыНаСервере()
    этоПривилегированныйПользователь = РольДоступна("ПолныеПрава") ИЛИ ПривилегированныйРежим();
    Элементы.УслугаОказана.ТолькоПросмотр = НЕ этоПривилегированныйПользователь;
    Элементы.Дата.ТолькоПросмотр = НЕ этоПривилегированныйПользователь;
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьСтатусОказанияУслугиНаСервере(Знач записьКлиентаСсылка)
    Возврат Документы.ЗаписьКлиента.ПолучитьСтатусОказанияУслуги(записьКлиентаСсылка);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
