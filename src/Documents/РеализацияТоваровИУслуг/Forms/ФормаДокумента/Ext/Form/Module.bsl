#Область ОписаниеПеременных

// Хранит названия табличных частей и наименования столбцов необходимые
// для расчета суммы документа
&НаКлиенте
Перем _ПоляРасчетаСуммыДокумента;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(_)
    _ПоляРасчетаСуммыДокумента = получитьПоляИтогов();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(_, __)
    обновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(_)
    текущаяСтрокаТовары = Элементы.Товары.ТекущиеДанные;
    обновитьСуммуДокумента(текущаяСтрокаТовары);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварПриИзменении(элемент)
    текущаяСтрокаТовары = Элементы.Товары.ТекущиеДанные;
    цена = РаботаСЦенамиВызовСеревера.ПолучитьЦенуПродажиНаДату(текущаяСтрокаТовары.Товар);

    Если цена = NULL Тогда
        текстСообщения = СтрШаблон("Не удалось получить текущую цену продажи для номенклатуры: ""%1"".\n
                |Проверьте наличие цены для номенклатуры в регистре цен",
                элемент.ТекстРедактирования);
        ПоказатьПредупреждение( , текстСообщения);
        цена = 0;
    КонецЕсли;

    текущаяСтрокаТовары.Цена = цена;

    обновитьСуммуДокумента(текущаяСтрокаТовары);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(_)
	обновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыТовары

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиУслугаПриИзменении(элемент)
    текущаяСтрокаУслуги = Элементы.Услуги.ТекущиеДанные;
    цена = РаботаСЦенамиВызовСеревера.ПолучитьЦенуПродажиНаДату(текущаяСтрокаУслуги.Услуга);

    Если цена = NULL Тогда
        текстСообщения = СтрШаблон("Не удалось получить текущую цену продажи для номенклатуры: ""%1"".\n
                |Проверьте наличие цены для номенклатуры в регистре цен",
                элемент.ТекстРедактирования);
        ПоказатьПредупреждение( , текстСообщения);
        цена = 0;
    КонецЕсли;

    текущаяСтрокаУслуги.Стоимость = цена;

    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(_)
	обновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыУслуги

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция рассчитатьСуммуПоСтрокеТовары(текущСтрокаТовары)
    Возврат текущСтрокаТовары.Цена * текущСтрокаТовары.Количество;
КонецФункции

&НаКлиенте
Функция рассчитатьСуммуДокумента()
    сумма = 0.0;
    Для Каждого таблица Из _ПоляРасчетаСуммыДокумента Цикл
        сумма = сумма + Объект[таблица.ИмяТЧ].Итог(таблица.Столбец);
    КонецЦикла;

    Возврат сумма;
КонецФункции

&НаКлиенте
Процедура обновитьСуммуДокумента(текущаяСтрокаТовары = Неопределено)
    Если текущаяСтрокаТовары <> Неопределено Тогда
        текущаяСтрокаТовары.Сумма = рассчитатьСуммуПоСтрокеТовары(текущаяСтрокаТовары);
    КонецЕсли;

    Объект.СуммаДокумента = рассчитатьСуммуДокумента();
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьПоляИтогов()
    Возврат Документы.РеализацияТоваровИУслуг.ПолучитьПоляДляРасчетаСуммыДокумента();
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
