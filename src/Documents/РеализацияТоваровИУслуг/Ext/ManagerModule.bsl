#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  Массив - массив объектов вида: { ИмяТЧ: Строка, Столбец: Строка } наименований
//  табличных частей (ТЧ) и столбцов ТЧ используемых для расчета суммы документа.
//  { ИмяТЧ - Имя ТабличнойЧасти, Столбец - Наименование Реквизита ТабличнойЧасти }
//
Функция ПолучитьПоляДляРасчетаСуммыДокумента() Экспорт
    имяТаблицыТоваров = Метаданные.Документы.РеализацияТоваровИУслуг.ТабличныеЧасти.Товары.Имя;
    имяТаблицыУслуг = Метаданные.Документы.РеализацияТоваровИУслуг.ТабличныеЧасти.Услуги.Имя;

    коллекцияПолей = Новый Массив(2);
    коллекцияПолей[0] = РаботаСДокументамиКлиентСервер.СоздатьЭлементРасчетаСуммыДокумента(имяТаблицыТоваров, "Сумма");
    коллекцияПолей[1] = РаботаСДокументамиКлиентСервер.СоздатьЭлементРасчетаСуммыДокумента(имяТаблицыУслуг, "Стоимость");

    Возврат коллекцияПолей;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

Процедура Печать(ТабДок, Ссылка) Экспорт
    Макет = Документы.РеализацияТоваровИУслуг.ПолучитьМакет("Печать");
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |	РеализацияТоваровИУслуг.АвторДокумента,
        |	РеализацияТоваровИУслуг.Дата,
        |	РеализацияТоваровИУслуг.Клиент,
        |	РеализацияТоваровИУслуг.Номер,
        |	РеализацияТоваровИУслуг.Основание,
        |	РеализацияТоваровИУслуг.Сотрудник,
        |	РеализацияТоваровИУслуг.СуммаДокумента,
        |	РеализацияТоваровИУслуг.Услуги.(
        |		НомерСтроки,
        |		Услуга,
        |		Стоимость
        |	),
        |	РеализацияТоваровИУслуг.Товары.(
        |		НомерСтроки,
        |		Товар,
        |		Количество,
        |		Цена,
        |		Сумма
        |	)
        |ИЗ
        |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
        |ГДЕ
        |	РеализацияТоваровИУслуг.Ссылка В (&Ссылка)";
    Запрос.Параметры.Вставить("Ссылка", Ссылка);
    Выборка = Запрос.Выполнить().Выбрать();

    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    Шапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
    ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
    ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
    ОбластьТовары = Макет.ПолучитьОбласть("Товары");
    Подвал = Макет.ПолучитьОбласть("Подвал");

    ТабДок.Очистить();

    ВставлятьРазделительСтраниц = Ложь;
    Пока Выборка.Следующий() Цикл
        Если ВставлятьРазделительСтраниц Тогда
            ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;

        ТабДок.Вывести(ОбластьЗаголовок);

        Шапка.Параметры.Заполнить(Выборка);
        ТабДок.Вывести(Шапка, Выборка.Уровень());

        ВыборкаУслуги = Выборка.Услуги.Выбрать();
        Если ВыборкаУслуги.Количество() > 0 Тогда
            ТабДок.Вывести(ОбластьУслугиШапка);
            Пока ВыборкаУслуги.Следующий() Цикл
                ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
                ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
            КонецЦикла;
        КонецЕсли;

        ВыборкаТовары = Выборка.Товары.Выбрать();
        Если ВыборкаТовары.Количество() > 0 Тогда
            ТабДок.Вывести(ОбластьТоварыШапка);
            Пока ВыборкаТовары.Следующий() Цикл
                ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
                ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
            КонецЦикла;
        КонецЕсли;

        Подвал.Параметры.Заполнить(Выборка);
        ТабДок.Вывести(Подвал);

        ВставлятьРазделительСтраниц = Истина;
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
