#Область ПрограммныйИнтерфейс

// Обновляет поле СуммаДокумента.\
// Для корректной рабаты все суммы по строкам ТЧ должны быть предварительно рассчитаны.\
// =========================\
// [примечание разработчика] - в текущей реализации (Спринт 4) не используется.
// Обновление суммы документа выполняется в процессе заполнения формы.
Процедура ОбновитьСуммуДокумента() Экспорт
	опцииРасчета = Документы.ПоступленияТоваров.ПолучитьПоляДляРасчетаСуммыДокумента();
	сумма = РаботаСДокументамиКлиентСервер.РассчитатьСуммуДокумента(ЭтотОбъект, опцииРасчета);
	СуммаДокумента = сумма;
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(_, __)
	отражатьСрокиГодности = получитьУчетнуюПолитику() = Перечисления.ВидыУчетнойПолитики.FEFO;

	Движения.ЦеныНоменклатурыПоставщиков.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;

	выборкаИтогиТовары = получитьВыборкуИтогиТовары();

	Пока выборкаИтогиТовары.Следующий() Цикл
		выполнитьДвижениеЦеныНоменклатурыПоставщиков(выборкаИтогиТовары);

		выборкаТовары = выборкаИтогиТовары.Выбрать();
		Пока выборкаТовары.Следующий() Цикл
			выполнитьДвижениеТоварыНаСкладах(выборкаТовары, отражатьСрокиГодности);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаЗаполнения(_, __, ___)
	РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область Движения
Процедура выполнитьДвижениеЦеныНоменклатурыПоставщиков(текСтрокаТовары)
	движение = Движения.ЦеныНоменклатурыПоставщиков.Добавить();
	движение.Период = Дата;
	движение.Номенклатура = текСтрокаТовары.Номенклатура;
	движение.Поставщик = Поставщик;
	движение.Цена = текСтрокаТовары.Цена;
КонецПроцедуры

Процедура выполнитьДвижениеТоварыНаСкладах(текСтрокаТовары, Знач отражатьСрокиГодности = Ложь)
	движение = Движения.ТоварыНаСкладах.Добавить();
	движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	движение.Период = Дата;
	движение.Номенклатура = текСтрокаТовары.Номенклатура;
	движение.Склад = Склад;
	движение.Количество = текСтрокаТовары.Количество;
	движение.Сумма = текСтрокаТовары.Сумма;
	Если отражатьСрокиГодности Тогда
		движение.СрокГодности = текСтрокаТовары.СрокГодности;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти // Движения

Функция получитьВыборкуИтогиТовары()
	запросТовары = Новый Запрос;
	запросТовары.УстановитьПараметр("Ссылка", Ссылка);

	запросТовары.Текст =
		"ВЫБРАТЬ
		|	ПоступленияТоваров.Номенклатура КАК Номенклатура,
		|	ПоступленияТоваров.Цена КАК Цена,
		|	СУММА(ПоступленияТоваров.Количество) КАК Количество,
		|	СУММА(ПоступленияТоваров.Сумма) КАК Сумма,
		|	ПоступленияТоваров.СрокГодности КАК СрокГодности
		|ИЗ
		|	Документ.ПоступленияТоваров.Товары КАК ПоступленияТоваров
		|ГДЕ
		|	ПоступленияТоваров.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступленияТоваров.Номенклатура,
		|	ПоступленияТоваров.Цена,
		|	ПоступленияТоваров.СрокГодности
		|ИТОГИ
		|	МАКСИМУМ(Цена)
		|ПО
		|	Номенклатура
		|";

	Возврат запросТовары.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
КонецФункции

Функция получитьУчетнуюПолитику()
	Возврат РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(Дата).УчетнаяПолитика;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
