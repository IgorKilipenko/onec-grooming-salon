#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(_, __, ___)
    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(_, __)
    Если Товары.Количество() = 0 Тогда
        Возврат;
    КонецЕсли;

    Движения.ТоварыНаСкладах.Записывать = Истина;

    Для Каждого текСтрокаТовары Из Товары Цикл
        движение = создатьДвижениеПоСкладам(ВидДвиженияНакопления.Расход);
        выполнитьДвижениеПоСкладамРасход(движение, текСтрокаТовары);

        движение = создатьДвижениеПоСкладам(ВидДвиженияНакопления.Приход);
        выполнитьДвижениеПоСкладамРасход(движение, текСтрокаТовары);
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  видДвижения - ВидДвиженияНакопления - По умолчанию: ВидДвиженияНакопления.Приход
//
// Возвращаемое значение:
//  РегистрНакопленияЗапись.ТоварыНаСкладах - новое движение по складам
Функция создатьДвижениеПоСкладам(Знач видДвижения = Неопределено)
    видДвижения = ?(видДвижения = Неопределено, ВидДвиженияНакопления.Приход, видДвижения);
    движение = Движения.ТоварыНаСкладах.Добавить();
    движение.Период = Дата;
    движение.ВидДвижения = видДвижения;
    движение.Склад = ?(видДвижения = ВидДвиженияНакопления.Расход, СкладОтправитель, СкладПолучатель);

    Возврат движение;
КонецФункции

// Заполняет движение данными из ТЧ Товары
//
// Параметры:
//  движение - РегистрНакопленияЗапись.ТоварыНаСкладах
//  текСтрокаТовары - ДокументыТабличнаяЧастьСтрока.ПеремещениеТоваров.Товары
Процедура выполнитьДвижениеПоСкладамРасход(движение, текСтрокаТовары)
    движение.Номенклатура = текСтрокаТовары.Товар;
    движение.Количество = текСтрокаТовары.Количество;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
